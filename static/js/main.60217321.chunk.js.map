{"version":3,"sources":["components/header.js","components/drawer.js","components/buttonupload.js","components/somethingcard.js","components/cardlizard.js","components/content.js","components/Login.js","components/buttons.js","App.js","UI/theme.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","hiStyle","fontStyle","color","fontSize","flex","buttonStyles","border","Header","classes","AppBar","position","Toolbar","Typography","className","AppDrawer","props","Drawer","open","docked","MenuList","MenuItem","theme","root","margin","spacing","input","display","UploadButtons","accept","id","multiple","type","htmlFor","Button","variant","component","IconButton","aria-label","bullet","transform","title","pos","marginBottom","image","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","avatar","backgroundColor","pink","SomethingCard","avatarUrl","subtitle","description","Card","CardHeader","Avatar","action","subheader","CardMedia","style","height","CardContent","CardActions","size","maxWidth","ImgMediaCard","CardActionArea","alt","gutterBottom","Content","Grid","container","item","xs","sm","imgUrl","paper","flexDirection","alignItems","palette","secondary","main","form","width","marginTop","submit","Login","onSigninSubmit","email","onEmailChange","password","onPasswordChahge","md","images","url","flexWrap","minWidth","breakpoints","down","zIndex","opacity","focusVisible","imageButton","left","right","top","bottom","justifyContent","common","white","imageSrc","imageBackdrop","black","transition","transitions","create","imageTitle","padding","imageMarked","ButtonBases","map","ButtonBase","focusRipple","key","focusVisibleClassName","cool","App","direction","createMuiTheme","primary","purple","green","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.60217321.chunk.js","sourcesContent":["import React from 'react';\r\nimport { AppBar, Toolbar, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport MoodBadIcon from '@material-ui/icons/MoodBad';\r\n\r\nconst useStyles = makeStyles({\r\n  hiStyle: {\r\n    fontStyle: 'oblique',\r\n    color: 'black',\r\n    fontSize: '32px',\r\n    flex: 1\r\n  },\r\n  buttonStyles: {\r\n    color: 'green',\r\n    border: 0,\r\n  }\r\n});\r\n\r\nconst Header = () => {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar>\r\n        <Typography\r\n        className={classes.hiStyle}\r\n        >\r\n         InstaYan\r\n        </Typography>\r\n        \r\n\r\n        <FaceIcon />\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\n\r\nexport const AppDrawer = (props) => {\r\n    return (\r\n        <Drawer\r\n        open = {props.open}\r\n        docked={false}\r\n       >\r\n        <MenuList>\r\n        <MenuItem > Главная </MenuItem>\r\n        <MenuItem > Фото </MenuItem>\r\n        </MenuList>\r\n        </Drawer> \r\n    )\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n}));\r\n\r\nexport default function UploadButtons() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <input\r\n        accept=\"image/*\"\r\n        className={classes.input}\r\n        id=\"contained-button-file\"\r\n        multiple\r\n        type=\"file\"\r\n      />\r\n      <label htmlFor=\"contained-button-file\">\r\n        <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n          Upload\r\n        </Button>\r\n      </label>\r\n      <input accept=\"image/*\" className={classes.input} id=\"icon-button-file\" type=\"file\" />\r\n      <label htmlFor=\"icon-button-file\">\r\n        <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n          <PhotoCamera />\r\n        </IconButton>\r\n      </label>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport { pink } from '@material-ui/core/colors';\r\nconst useStyles = makeStyles({\r\n    \r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n    image: {\r\n      backgroundImage: 'url(https://source.unsplash.com/random)',\r\n      backgroundRepeat: 'no-repeat',\r\n      backgroundSize: 'small',\r\n      backgroundPosition: 'center',\r\n    },\r\n    avatar: {\r\n      backgroundColor: pink[500],\r\n    },\r\n  \r\n  });\r\n\r\n\r\nconst SomethingCard = props => {\r\n    const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n  const { avatarUrl, title, subtitle, description, image} = props;\r\n    return (\r\n        <Card >\r\n            <CardHeader\r\n        avatar={\r\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n            Я\r\n          </Avatar>\r\n           \r\n        }\r\n        action={\r\n          <IconButton aria-label=\"settings\">\r\n            <ShareIcon />\r\n          </IconButton>\r\n        }\r\n        title={title}\r\n        subheader={subtitle}\r\n      />\r\n       <CardMedia style ={{ height: \"150px\" }} image=\"https://lh3.googleusercontent.com/tyUF72tMIJu9U5_RYRQlc18smZW7sRTAAaoQCKH1ILIg4M5tXLCL01aHqitgQawJQIJVaTyVZUNMKqRBP3mIKxeVDnv08FTA8qMR0Nsdt-jRpddsQS4aVIpCySt9X5EL4ZUA7nxK=w2400\"\r\n       \r\n      />\r\n        \r\n        \r\n      \r\n\r\n          <CardContent>\r\n            \r\n            <Typography variant=\"body2\" component=\"p\">\r\n              {description}\r\n              \r\n            </Typography>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Button size=\"small\">Взять на игру</Button>\r\n            <Button size=\"small\">Взять на сезон</Button>\r\n          </CardActions>\r\n        </Card>\r\n      );\r\n}\r\n\r\nexport default SomethingCard;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n});\r\n\r\nexport default function ImgMediaCard() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          component=\"img\"\r\n          alt=\"Contemplative Reptile\"\r\n          height=\"140\"\r\n          image='https://lh3.googleusercontent.com/QHZW8XdUSeFMszRtX9nlKMqUa7ApP7-9t_tSBLGqP9mtNDLkVSKn_SfDRcFZVdOcQSAdoQL3C3_48HVW9YQ_pn6JuX-IY2FwjiwFD8hWoDahy53ELpHto3flOvXIuGz0VRjWEqip=w2400'\r\n          title=\"Contemplative Reptile\"\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            Lizard\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging\r\n            across all continents except Antarctica\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Button size=\"small\" color=\"primary\">\r\n          Share\r\n        </Button>\r\n        <Button size=\"small\" color=\"primary\">\r\n          Learn More\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}","import React from 'react';\r\nimport SomethingCard from './somethingcard';\r\nimport { Grid } from '@material-ui/core';\r\nimport ImgMediaCard from './cardlizard';\r\n\r\n\r\nconst Content = () => {\r\n    return (\r\n        <Grid container spacing={4}>\r\n            <Grid item xs={12} sm={4}>\r\n            <SomethingCard \r\n            title ='Дектерёв Ян Олегович'\r\n            subtitle=\"11к ммр в доте\"\r\n            avatarUrl= \"https://source.unsplash.com/random\"\r\n            description=\"Учится в Удгу, играет на виспе\"\r\n            imgUrl=\"\"\r\n            />\r\n        <ImgMediaCard />\r\n\r\n        \r\n            </Grid>\r\n        </Grid>\r\n    \r\n    );\r\n}\r\n\r\nexport default Content;","import React from 'react';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    backgroundImage: 'url(https://source.unsplash.com/1600x900/?nature,water)',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundSize: 'small',\r\n    backgroundPosition: 'center',\r\n  },  paper: {\r\n    margin: theme.spacing(4, 2),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst Login = ({onSigninSubmit, email, onEmailChange, password, onPasswordChahge}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      \r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst images = [\r\n  {\r\n    url: 'https://lh3.googleusercontent.com/85KRSaKTkgthOAOjXvoybCUFPuTCOqk1MB5dHh0USW0X_R72vZWppbj9G_mR_7KJqOT81Ha2rv38nbHl07xIJvvJuxIYdLwXTDeEj1lMCW6-kXC16Z7W6Q62YIdFqTVTA6tnhlw1=w2400',\r\n    title: 'Удгу',\r\n    width: '40%',\r\n  },\r\n  {\r\n    url: 'https://lh3.googleusercontent.com/348h6krQhjhdVwZwerI00UsPibPTQ0cug9d9a_sTAutnxxXqm0Cy-wR53viNkbPL-cbuNM5R6uMrV8YvSX2o-SVz8ITUw-iqJzF9mn6CQBvQ921vWc3-rgPa43hKhq2Z7t7NTR2j=w2400',\r\n    title: 'Else with Burgers',\r\n    width: '30%',\r\n  },\r\n  {\r\n    url: 'https://lh3.googleusercontent.com/nVQgSyD1YkbOA_Kdstd24ZbfHDxhaZxnQxl96gh1oLX3z2RCvvS1nl73Ot8D20CtXnxuQamSKMUUI1E_6BoZr6Go4nQXSYwqRsHQ-PZlzDnbSZ1_ajdlm6lNvjoHDBc8Ic-QwNol=w2400',\r\n    title: 'Кукуха',\r\n    width: '30%',\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    minWidth: 300,\r\n    width: '100%',\r\n  },\r\n  image: {\r\n    position: 'relative',\r\n    height: 200,\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '100% !important', // Overrides inline-style\r\n      height: 100,\r\n    },\r\n    '&:hover, &$focusVisible': {\r\n      zIndex: 1,\r\n      '& $imageBackdrop': {\r\n        opacity: 0.15,\r\n      },\r\n      '& $imageMarked': {\r\n        opacity: 0,\r\n      },\r\n      '& $imageTitle': {\r\n        border: '4px solid currentColor',\r\n      },\r\n    },\r\n  },\r\n  focusVisible: {},\r\n  imageButton: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    color: theme.palette.common.white,\r\n  },\r\n  imageSrc: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center 40%',\r\n  },\r\n  imageBackdrop: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    backgroundColor: theme.palette.common.black,\r\n    opacity: 0.4,\r\n    transition: theme.transitions.create('opacity'),\r\n  },\r\n  imageTitle: {\r\n    position: 'relative',\r\n    padding: `${theme.spacing(2)}px ${theme.spacing(4)}px ${theme.spacing(1) + 6}px`,\r\n  },\r\n  imageMarked: {\r\n    height: 3,\r\n    width: 18,\r\n    backgroundColor: theme.palette.common.white,\r\n    position: 'absolute',\r\n    bottom: -2,\r\n    left: 'calc(50% - 9px)',\r\n    transition: theme.transitions.create('opacity'),\r\n  },\r\n}));\r\n\r\nexport default function ButtonBases() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {images.map((image) => (\r\n        <ButtonBase\r\n          focusRipple\r\n          key={image.title}\r\n          className={classes.image}\r\n          focusVisibleClassName={classes.focusVisible}\r\n          style={{\r\n            width: image.width,\r\n          }}\r\n        >\r\n          <span\r\n            className={classes.imageSrc}\r\n            style={{\r\n              backgroundImage: `url(${image.url})`,\r\n            }}\r\n          />\r\n          <span className={classes.imageBackdrop} />\r\n          <span className={classes.imageButton}>\r\n            <Typography\r\n              component=\"span\"\r\n              variant=\"subtitle1\"\r\n              color=\"inherit\"\r\n              className={classes.imageTitle}\r\n            >\r\n              {image.title}\r\n              <span className={classes.imageMarked} />\r\n            </Typography>\r\n          </span>\r\n        </ButtonBase>\r\n      ))}\r\n    </div>\r\n  );\r\n}","import React, { Component } from 'react';\nimport './App.css';\nimport { Button, Typography } from '@material-ui/core';\nimport Header from './components/header'\nimport {AppDrawer} from './components/drawer';\nimport UploadButtons from './components/buttonupload'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid } from '@material-ui/core';\nimport Content from './components/content'\nimport Login from './components/Login'\nimport ButtonBases from './components/buttons';\n\nconst useStyles = makeStyles({\n  hiStyle: {\n    fontStyle: 'oblique',\n    color: 'red',\n    fontSize: '24px',\n  },\n  buttonStyles: props => {\n    return{\n      color: props.cool ? 'green': \"black\",\n    backgroundColor: props.cool ? \"orange\" : \"yellow\",\n    \n  }\n    \n  }\n});\n \n  \n  \n\n  \n\n\nconst  App = () => {\n  const classes = useStyles();\n\n  return (\n    <div className=\"App\">\n      \n      \n      \n\n      <Grid container direction=\"column\">\n        <Grid item>\n        <Header />\n        </Grid>\n        <Grid item container>\n          <Grid item xs={false} sm={2} />\n          <Grid xs={12} sm={8}>\n         \n          <Content />\n\n          </Grid>\n          <Grid item xs={false} sm={2} />\n          </Grid>\n          <Button \n      className={classes.buttonStyles}\n      color=\"secondary\" \n      variant=\"outlined\"\n       > Кнопочка </Button>\n      \n      <Typography\n      className={classes.hiStyle} \n      color =\"secondary\">\n      Приветствую смотрящих\n      </Typography>\n      </Grid>\n      <AppDrawer \n      />\n      <UploadButtons />\n\n      <ButtonBases />\n\n         <Login />  \n\n\n\n    \n\n    \n      \n    </div>\n  );\n};\n\nexport default App;\n\n\n\n\n\n\n","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport purple from '@material-ui/core/colors/purple';\r\nimport green from '@material-ui/core/colors/green';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: purple[500],\r\n    },\r\n    secondary: {\r\n      main: green[500],\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from './UI/theme';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n\n<ThemeProvider theme={theme}>\n    <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nif (module.hot) {\n  module.hot.accept();\n  }\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}